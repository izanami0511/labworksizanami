#define _CRT_SECURE_NO_WARNINGS

#include <stdio.h>
#include <string.h>
#include <windows.h>
#define MAXLINE 1024

void main(void)
{
	FILE *fpin;
	FILE *fpout;
	char line[MAXLINE];
	char *ptr;

	fpin = fopen("test.txt", "r");
	fpout = fopen("result.txt", "w");
	if (fpin == NULL)
		return 1;
	if (fpout == NULL)
		return 1;
	while (!feof(fpin))
	{
		ptr = fgets(line, MAXLINE, fpin);

		if (ptr == NULL)
			break;

		while (*ptr)
		{
			if (*ptr != ' ' ||  *ptr != '\n' || *ptr != '\0')
			{
				if (*ptr == '1') fprintf(fpout, " one");
				if (*ptr == '2') fprintf(fpout, " two");
	 			if (*ptr == '3') fprintf(fpout, " three");
				if (*ptr == '4') fprintf(fpout, " four");
				if (*ptr == '5') fprintf(fpout, " five");
				if (*ptr == '6') fprintf(fpout, " six");
				if (*ptr == '7') fprintf(fpout, " seven");
				if (*ptr == '8') fprintf(fpout, " eight");
				if (*ptr == '9') fprintf(fpout, " nine");
				if (*ptr == '0') fprintf(fpout, " zero");
				//if (*ptr == '.'|| *ptr == ',' || *ptr == ';' || *ptr == '!' || *ptr == '?') // and e.t.c
				if ((*ptr <= 'a' && *ptr >= 'z') || ( *ptr < '0' || *ptr >'9') && (*ptr != ' ' && *ptr != '\n' && *ptr != '\0'))
				{
					printf("This symbol wasn't written, because of incorrect input: %c\n", *ptr);
				}
			}
			ptr++;
		}
	}
	printf("Task was done!\n");
	fclose(fpin);
	fclose(fpout);
	system("pause");
}
